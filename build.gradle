plugins {
    id 'com.example.demo.java-conventions'

}

repositories {
    maven {
        url: 'https://repo.maven.apache.org/maven2'
    }
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.5.0'
    // <!--用于RestController注解使用 必须引入该jar-->
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
    // <!--swagger 用于界面显示 -->
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    // <!--是注解 @EnableSwagger2-->
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    // <!--swagger 用于引入 APIOperation    Api注解  用于展示接口文档 -->
    implementation 'io.swagger:swagger-annotations:1.5.12'
    //  <!--用于aop切面编程 使用AOP织入，需要导入一个依赖包-->
    implementation 'org.aspectj:aspectjweaver'
    //    <!--用于JSON.toJSonString 方法使用-->
    implementation 'com.saygoer:fastjson:1.1-unwrap'
    //  <!--redis引入-->
    implementation 'redis.clients:jedis'
    // <!--mybatis支持包 -->
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    //   <!--jexl引入 支持算法 -->
    implementation 'commons-jexl:commons-jexl:1.1'
    // <!--用于服务调用的时候熔断机制-->
    implementation 'com.netflix.hystrix:hystrix-core:1.5.6'
    // <!--Ribbon提供了服务间调用的客户端负载均衡功能，  等同feigin-->
    implementation 'com.netflix.ribbon:ribbon:2.2.2'
    implementation 'mysql:mysql-connector-java'
    //  <!-- Oracle驱动包  不添加，就没有驱动oracle.jdbc.OracleDriver-->
    implementation 'com.oracle.database.jdbc:ojdbc8'
    // <!-- druid 数据库连接池   -->
    implementation 'com.alibaba:druid-spring-boot-starter:1.2.6'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-dependencies'

}

project("common")
project("mybatis-learning")
project("spring-boot-hystrix")
project("spring-euraka")

project.root = 'lpp-multiple-project'
