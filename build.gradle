plugins {
    id 'java'
}
repositories {
    mavenCentral()
    maven{ url 'https://repo.maven.apache.org/maven2'}
    maven{ url 'https://maven.aliyun.com/repository/public'}
    maven{ url 'https://maven.aliyun.com/repository/gradle-plugin'}
}
subprojects{
    ///* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径
    apply plugin: 'java'
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter:2.6.7'
        implementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
        // <!--用于RestController注解使用 必须引入该jar-->
        implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
        // <!--swagger 用于界面显示 -->
        implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        // <!--是注解 @EnableSwagger2-->
        implementation 'io.springfox:springfox-swagger2:2.9.2'
        // <!--swagger 用于引入 APIOperation    Api注解  用于展示接口文档 -->
        implementation 'io.swagger:swagger-annotations:1.5.12'
        //    <!--用于JSON.toJSonString 方法使用-->
        implementation 'com.saygoer:fastjson:1.1-unwrap'

        //   <!--jexl引入 支持算法 -->
        implementation 'commons-jexl:commons-jexl:1.1'
        // <!--用于服务调用的时候熔断机制-->
        implementation 'com.netflix.hystrix:hystrix-core:1.5.6'
        // <!--Ribbon提供了服务间调用的客户端负载均衡功能，  等同feigin-->
        implementation 'com.netflix.ribbon:ribbon:2.2.2'
        implementation 'mysql:mysql-connector-java:8.0.31'
        //  <!-- Oracle驱动包  不添加，就没有驱动oracle.jdbc.OracleDriver-->
        implementation 'com.oracle.database.jdbc:ojdbc8:21.7.0.0'
        // <!-- druid 数据库连接池   -->
        implementation 'com.alibaba:druid-spring-boot-starter:1.2.9'
        // <!--mybatis支持包 -->
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
        implementation 'org.aspectj:aspectjweaver:1.9.9.1'
        implementation 'org.projectlombok:lombok:1.18.22'


    }
}

dependencies {
    implementation project("common")
    implementation project("mybatis-learning")
    implementation project("spring-boot-hystrix")
    implementation project("spring-euraka")
}
